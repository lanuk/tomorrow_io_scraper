version: "3.8"
services:
  weather_db:
    container_name: weather_db
    image: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgres/data
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password

  pythonapp:
    build: ./scraper
    env_file:
      - path: .env
        required: true
    # healthcheck:
      # test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      # interval: 10s
      # timeout: 5s
      # retries: 5
    depends_on:
      weather_db:
        condition: service_healthy
    environment:
      API_KEY: ${TOMORROW_IO_API_KEY}
      DB_HOST: weather_db
      DB_NAME: mydatabase
      DB_USER: user
      DB_PW: password


  jupyter:
    image: jupyter/datascience-notebook
    build: ./jupyter
    env_file:
      - path: .env
        required: true
    ports:
      - 8888:8888
    depends_on:
      pythonapp:
        condition: service_completed_successfully
      weather_db:
        condition: service_healthy
    environment:
      DB_HOST: weather_db
      DB_NAME: mydatabase
      DB_USER: user
      DB_PW: password

volumes:
  postgres_data: